- name: Make vm directory
  file:
    state: directory
    path: "/var/kvm/images/{{ vm.uuid }}"

- name: Make vm-specific image
  command:
    cmd: "qemu-img convert -O {{ vm.src_img_fmt }} {{ vm.src_img }} {{ vm.uuid }}/{{ vm.src_img }}.img"
    chdir: /var/kvm/images

- name: Make cloud-init needed files
  template:
    src: "{{ item.src }}"
    dest: "/var/kvm/images/{{ vm.uuid }}/{{ item.dest }}"
  vars:
    key1: "{{ lookup('file', vm.keyfile) }}"
  loop:
  - src: meta-data.yaml.j2
    dest: meta-data.yaml
  - src: user-data.yaml.j2
    dest: user-data.yaml
  - src: net-config.yaml.j2
    dest: net-config.yaml

- name: Create the ISO image
  command:
    cmd: cloud-localds cloud-init.iso user-data.yaml meta-data.yaml --network-config=net-config.yaml
    chdir: "/var/kvm/images/{{ vm.uuid }}"

- name: Launch the VM
  command:
    cmd: >
      /usr/bin/qemu-system-x86_64 -enable-kvm
      -drive file=/var/kvm/images/{{ vm.uuid }}/{{ vm.src_img }},if=virtio
      -cdrom /var/kvm/images/{{ vm.uuid }}/cloud-init.iso
      -daemonize
      -display none
      -smp cpus=1
      -m 1G
      -net nic,netdev=tap1,macaddr={{ vm.mac }}
      -netdev bridge,id=tap1,br=br0
      -d int
      -D /var/log/qemu/{{ vm.uuid }}-qemu.log
  become: True
